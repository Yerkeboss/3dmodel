/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";
import * as THREE from 'three';
import { useAnimations } from "@react-three/drei/useAnimations";


export default function Model(props) {
  const [UpDown, setUpDown] = useState(false);
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/animated-sphere.glb");
  const { actions } = useAnimations(animations, group);
  console.log(actions);
  useEffect(() => {
    if (UpDown) {
      actions.UpDown.stop();
    } else {
      actions.UpDown.play();
    }
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        onClick={() => setUpDown(!UpDown)}
        name="Sphere"
        material={materials["Red Shiny"]}
        geometry={nodes.Sphere.geometry}
      />
    </group>
  );
}

useGLTF.preload("/animated-sphere.glb");
