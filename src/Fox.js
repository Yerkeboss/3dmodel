/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';


const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

const renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );
camera.position.x = 5;
camera.position.y = 5;
camera.position.z = 5;

// const loader = new GLTFLoader();

// function addModel(pos) {
//   const loader = new GLTFLoader();
//   loader.load(`res/saturnV/scene.gltf`, (gltf) => {
//     const model = gltf.scene;
//     model.position.set(pos.x, pos.y, pos.z);
//     model.isDraggable = true;
//     scene.add(model);
//   });
// }

// addModel({ x: 30, y: 33, z: 1 });

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/fox.gltf')
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Plane119.geometry} material={materials['Material.091']} position={[30,33,1]}/>
    </group>
  )
}


